services:
  postgres:
    container_name: 'db'
    image: 'postgres:latest'
    ports:
      - '15432:5432'
    networks:
      - app-tier
    volumes:
      - ./db/:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin4:
    image: 'dpage/pgadmin4'
    ports:
      - '5050:80'
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: 'test@test.com'
      PGADMIN_DEFAULT_PASSWORD: 'test'
    networks:
      - app-tier

  monorepo:
    build:
      context: ./
      dockerfile: Dockerfile
    command: bash -c "yarn run-all"
    volumes:
      - /app/node_modules

      - ./packages/goldfish:/app/packages/goldfish
      - ./packages/goldfish/contracts:/app/packages/goldfish/contracts
      - /app/packages/goldfish/node_modules
      - /app/packages/goldfish/.next

      - ./packages/whale:/app/packages/whale
      - /app/packages/whale/node_modules

      - ./packages/salmon:/app/packages/salmon
      - ./packages/salmon/collections:/app/packages/salmon/collections
      - /app/packages/salmon/node_modules

      - ./packages/shark:/app/packages/shark
      - ./packages/shark/collections:/app/packages/shark/collections
      - /app/packages/shark/node_modules

    ports:
      - '0.0.0.0:8545:8545'
      - '0.0.0.0:3000:3000'

    depends_on:
      - postgres

    env_file:
      - .env

    environment:
      - DATABASE_URL=postgres://postgres:postgres@db/aquarium-wars
      - SHADOW_DATABASE_URL=postgres://postgres:postgres@db/shadow_db
      - IPFS_API=/ip4/127.0.0.1/tcp/5001

    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge

