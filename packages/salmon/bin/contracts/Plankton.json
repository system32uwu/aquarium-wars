{
    "contractName": "Plankton",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "symbol",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "initialSupply",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "_beneficiary",
                    "type": "address"
                },
                {
                    "internalType": "uint8",
                    "name": "_maxBurnPercent",
                    "type": "uint8"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_minter",
                    "type": "address"
                }
            ],
            "name": "LogNewMinter",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_from",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "PlanktonsBurned",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "PlanktonsMinted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_from",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "burnPlanktons",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "maxBurnPercent",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "mintPlanktons",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "minter",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newMinter",
                    "type": "address"
                }
            ],
            "name": "setMinter",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_maxBurnPercent\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"LogNewMinter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"PlanktonsBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"PlanktonsMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnPlanktons\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBurnPercent\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintPlanktons\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mateo Carriqui\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burnPlanktons(address,uint256)\":{\"details\":\"Burn Planktons.\"},\"constructor\":{\"params\":{\"_beneficiary\":\"The address that will receive the minted tokens.\",\"initialSupply\":\"initial supply when deploying the token on a network.\",\"name\":\"The name of the Token (Plankton).\",\"symbol\":\"The symbol of the Token (PLANK).\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mintPlanktons(address,uint256)\":{\"details\":\"Mint new Planktons.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMinter(address)\":{\"params\":{\"newMinter\":\"The address of the new minter.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Plankton Token, the currency for Fish Wars\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Mint and Burn Planktons, transfer minter authority to another address.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/system32uwu/repos/solidity-game/contracts/PlanktonToken.sol\":\"Plankton\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/system32uwu/repos/solidity-game/contracts/PlanktonToken.sol\":{\"keccak256\":\"0xf249b3cfe5e23936949be2631be9b463cb6b021ef6ccccb383fbd28ae2a3f054\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf669822417cad49f20229e172a1d78a9fe85a79ae342a8eb1d7f7c2bc726ec3\",\"dweb:/ipfs/QmUNm5UT19Bq9kuZLcW838iDmrP5oAWTToAzwAZrEzEUf6\"]},\"/home/system32uwu/repos/solidity-game/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"/home/system32uwu/repos/solidity-game/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"/home/system32uwu/repos/solidity-game/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"/home/system32uwu/repos/solidity-game/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"/home/system32uwu/repos/solidity-game/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b5060405162001628380380620016288339810160408190526200003491620003e6565b8451859085906200004d90600390602085019062000273565b5080516200006390600490602084019062000273565b505050620000806200007a6200013860201b60201c565b6200013c565b60648160ff1610620000d95760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964205f6d61784275726e50657263656e7400000000000000000060448201526064015b60405180910390fd5b600680546001600160a81b0319163360ff60a01b191617600160a01b60ff8416021790556200012d826200010b601290565b6200011b9060ff16600a620005ad565b620001279086620005c2565b6200018e565b50505050506200063c565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001e65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620000d0565b8060026000828254620001fa9190620005e4565b90915550506001600160a01b0382166000908152602081905260408120805483929062000229908490620005e4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200028190620005ff565b90600052602060002090601f016020900481019282620002a55760008555620002f0565b82601f10620002c057805160ff1916838001178555620002f0565b82800160010185558215620002f0579182015b82811115620002f0578251825591602001919060010190620002d3565b50620002fe92915062000302565b5090565b5b80821115620002fe576000815560010162000303565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200034157600080fd5b81516001600160401b03808211156200035e576200035e62000319565b604051601f8301601f19908116603f0116810190828211818310171562000389576200038962000319565b81604052838152602092508683858801011115620003a657600080fd5b600091505b83821015620003ca5785820183015181830184015290820190620003ab565b83821115620003dc5760008385830101525b9695505050505050565b600080600080600060a08688031215620003ff57600080fd5b85516001600160401b03808211156200041757600080fd5b6200042589838a016200032f565b965060208801519150808211156200043c57600080fd5b506200044b888289016200032f565b60408801516060890151919650945090506001600160a01b03811681146200047257600080fd5b608087015190925060ff811681146200048a57600080fd5b809150509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004ef578160001904821115620004d357620004d362000498565b80851615620004e157918102915b93841c9390800290620004b3565b509250929050565b6000826200050857506001620005a7565b816200051757506000620005a7565b81600181146200053057600281146200053b576200055b565b6001915050620005a7565b60ff8411156200054f576200054f62000498565b50506001821b620005a7565b5060208310610133831016604e8410600b841016171562000580575081810a620005a7565b6200058c8383620004ae565b8060001904821115620005a357620005a362000498565b0290505b92915050565b6000620005bb8383620004f7565b9392505050565b6000816000190483118215151615620005df57620005df62000498565b500290565b60008219821115620005fa57620005fa62000498565b500190565b600181811c908216806200061457607f821691505b602082108114156200063657634e487b7160e01b600052602260045260246000fd5b50919050565b610fdc806200064c6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a9059cbb11610071578063a9059cbb14610264578063c3d7402614610277578063dd62ed3e1461028b578063f2fde38b146102c4578063fca3b5aa146102d757600080fd5b806370a0823114610207578063715018a6146102305780638da5cb5b1461023857806395d89b4114610249578063a457c2d71461025157600080fd5b806323b872dd116100f457806323b872dd146101a4578063313ce567146101b757806339509351146101cc5780635e1e50f3146101df578063630fcfaf146101f457600080fd5b806306fdde03146101265780630754617214610144578063095ea7b31461016f57806318160ddd14610192575b600080fd5b61012e6102ea565b60405161013b9190610d84565b60405180910390f35b600654610157906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61018261017d366004610df5565b61037c565b604051901515815260200161013b565b6002545b60405190815260200161013b565b6101826101b2366004610e1f565b610392565b60125b60405160ff909116815260200161013b565b6101826101da366004610df5565b610441565b6101f26101ed366004610df5565b61047d565b005b6101f2610202366004610df5565b610523565b610196610215366004610e5b565b6001600160a01b031660009081526020819052604090205490565b6101f2610615565b6005546001600160a01b0316610157565b61012e61064b565b61018261025f366004610df5565b61065a565b610182610272366004610df5565b6106f3565b6006546101ba90600160a01b900460ff1681565b610196610299366004610e7d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101f26102d2366004610e5b565b610700565b6101f26102e5366004610e5b565b61079b565b6060600380546102f990610eb0565b80601f016020809104026020016040519081016040528092919081815260200182805461032590610eb0565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b5050505050905090565b6000610389338484610819565b50600192915050565b600061039f84848461093e565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104295760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104368533858403610819565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610389918590610478908690610f01565b610819565b6006546001600160a01b031633146104d25760405162461bcd60e51b815260206004820152601860248201527721b0b63632b91034b9903737ba103a34329036b4b73a32b960411b6044820152606401610420565b6104dc8282610b0d565b604080516001600160a01b0384168152602081018390527fc858a6e0f13503b6f7c4727e1532177a5a43a042537ab8d93b718184bc527e7391015b60405180910390a15050565b6006546001600160a01b031633146105785760405162461bcd60e51b815260206004820152601860248201527721b0b63632b91034b9903737ba103a34329036b4b73a32b960411b6044820152606401610420565b8061058260025490565b61058c9190610f19565b600654600254606491600160a01b900460ff16906105aa9190610f30565b6105b49190610f4f565b6002546105c19190610f19565b11156105cc57600080fd5b6105d68282610bec565b604080516001600160a01b0384168152602081018390527f4b42e6673c67f160cc6ca2f372db072da1d72afb6aa1c46aabd1e6cb8400a1439101610517565b6005546001600160a01b0316331461063f5760405162461bcd60e51b815260040161042090610f71565b6106496000610d32565b565b6060600480546102f990610eb0565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156106dc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610420565b6106e93385858403610819565b5060019392505050565b600061038933848461093e565b6005546001600160a01b0316331461072a5760405162461bcd60e51b815260040161042090610f71565b6001600160a01b03811661078f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610420565b61079881610d32565b50565b6005546001600160a01b031633146107c55760405162461bcd60e51b815260040161042090610f71565b600680546001600160a01b0319166001600160a01b0383169081179091556040519081527fb47afe87c8374738d61604b305e5d2d8fc0d8c6164287b16aa2707d6454f12d99060200160405180910390a150565b6001600160a01b03831661087b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610420565b6001600160a01b0382166108dc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610420565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166109a25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610420565b6001600160a01b038216610a045760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610420565b6001600160a01b03831660009081526020819052604090205481811015610a7c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610420565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610ab3908490610f01565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aff91815260200190565b60405180910390a350505050565b6001600160a01b038216610b635760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610420565b8060026000828254610b759190610f01565b90915550506001600160a01b03821660009081526020819052604081208054839290610ba2908490610f01565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c4c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610420565b6001600160a01b03821660009081526020819052604090205481811015610cc05760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610420565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610cef908490610f19565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610931565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610db157858101830151858201604001528201610d95565b81811115610dc3576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610df057600080fd5b919050565b60008060408385031215610e0857600080fd5b610e1183610dd9565b946020939093013593505050565b600080600060608486031215610e3457600080fd5b610e3d84610dd9565b9250610e4b60208501610dd9565b9150604084013590509250925092565b600060208284031215610e6d57600080fd5b610e7682610dd9565b9392505050565b60008060408385031215610e9057600080fd5b610e9983610dd9565b9150610ea760208401610dd9565b90509250929050565b600181811c90821680610ec457607f821691505b60208210811415610ee557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f1457610f14610eeb565b500190565b600082821015610f2b57610f2b610eeb565b500390565b6000816000190483118215151615610f4a57610f4a610eeb565b500290565b600082610f6c57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220665d66fbd2f4f3c75a472fac5d20a97065911e4e485915ba88fb6ffcf625e27164736f6c634300080b0033",
    "deployedBytecode": "",
    "sourceMap": "433:1819:0:-:0;;;1156:403;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:13:2;;1330:4:0;;1336:6;;2029:13:2;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2052:17:2;;;;:7;;:17;;;;;:::i;:::-;;1963:113;;921:32:1;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;1380:3:0::1;1362:15;:21;;;1354:57;;;::::0;-1:-1:-1;;;1354:57:0;;2193:2:6;1354:57:0::1;::::0;::::1;2175:21:6::0;2232:2;2212:18;;;2205:30;2271:25;2251:18;;;2244:53;2314:18;;1354:57:0::1;;;;;;;;;1421:6;:19:::0;;-1:-1:-1;;;;;;1450:32:0;1430:10:::1;-1:-1:-1::0;;;;1450:32:0;;-1:-1:-1;;;1450:32:0::1;::::0;::::1;;;::::0;;1492:60:::1;1498:12:::0;1540:10:::1;3160:2:2::0;;3078:91;1540:10:0::1;1528:23;::::0;1532:19:::1;;1528:2;:23;:::i;:::-;1512:39;::::0;:13;:39:::1;:::i;:::-;1492:5;:60::i;:::-;1156:403:::0;;;;;433:1819;;640:96:5;719:10;;640:96::o;2270:187:1:-;2362:6;;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;8311:389:2:-;-1:-1:-1;;;;;8394:21:2;;8386:65;;;;-1:-1:-1;;;8386:65:2;;4224:2:6;8386:65:2;;;4206:21:6;4263:2;4243:18;;;4236:30;4302:33;4282:18;;;4275:61;4353:18;;8386:65:2;4022:355:6;8386:65:2;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8554:18:2;;:9;:18;;;;;;;;;;:28;;8576:6;;8554:9;:28;;8576:6;;8554:28;:::i;:::-;;;;-1:-1:-1;;8597:37:2;;4661:25:6;;;-1:-1:-1;;;;;8597:37:2;;;8614:1;;8597:37;;4649:2:6;4634:18;8597:37:2;;;;;;;8311:389;;:::o;433:1819:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;433:1819:0;;;-1:-1:-1;433:1819:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:6;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:6;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:6:o;1036:950::-;1160:6;1168;1176;1184;1192;1245:3;1233:9;1224:7;1220:23;1216:33;1213:53;;;1262:1;1259;1252:12;1213:53;1289:16;;-1:-1:-1;;;;;1354:14:6;;;1351:34;;;1381:1;1378;1371:12;1351:34;1404:61;1457:7;1448:6;1437:9;1433:22;1404:61;:::i;:::-;1394:71;;1511:2;1500:9;1496:18;1490:25;1474:41;;1540:2;1530:8;1527:16;1524:36;;;1556:1;1553;1546:12;1524:36;;1579:63;1634:7;1623:8;1612:9;1608:24;1579:63;:::i;:::-;1682:2;1667:18;;1661:25;1729:2;1714:18;;1708:25;1569:73;;-1:-1:-1;1661:25:6;-1:-1:-1;1708:25:6;-1:-1:-1;;;;;;1762:31:6;;1752:42;;1742:70;;1808:1;1805;1798:12;1742:70;1881:3;1866:19;;1860:26;1831:5;;-1:-1:-1;1930:4:6;1917:18;;1905:31;;1895:59;;1950:1;1947;1940:12;1895:59;1973:7;1963:17;;;1036:950;;;;;;;;:::o;2343:127::-;2404:10;2399:3;2395:20;2392:1;2385:31;2435:4;2432:1;2425:15;2459:4;2456:1;2449:15;2475:422;2564:1;2607:5;2564:1;2621:270;2642:7;2632:8;2629:21;2621:270;;;2701:4;2697:1;2693:6;2689:17;2683:4;2680:27;2677:53;;;2710:18;;:::i;:::-;2760:7;2750:8;2746:22;2743:55;;;2780:16;;;;2743:55;2859:22;;;;2819:15;;;;2621:270;;;2625:3;2475:422;;;;;:::o;2902:806::-;2951:5;2981:8;2971:80;;-1:-1:-1;3022:1:6;3036:5;;2971:80;3070:4;3060:76;;-1:-1:-1;3107:1:6;3121:5;;3060:76;3152:4;3170:1;3165:59;;;;3238:1;3233:130;;;;3145:218;;3165:59;3195:1;3186:10;;3209:5;;;3233:130;3270:3;3260:8;3257:17;3254:43;;;3277:18;;:::i;:::-;-1:-1:-1;;3333:1:6;3319:16;;3348:5;;3145:218;;3447:2;3437:8;3434:16;3428:3;3422:4;3419:13;3415:36;3409:2;3399:8;3396:16;3391:2;3385:4;3382:12;3378:35;3375:77;3372:159;;;-1:-1:-1;3484:19:6;;;3516:5;;3372:159;3563:34;3588:8;3582:4;3563:34;:::i;:::-;3633:6;3629:1;3625:6;3621:19;3612:7;3609:32;3606:58;;;3644:18;;:::i;:::-;3682:20;;-1:-1:-1;2902:806:6;;;;;:::o;3713:131::-;3773:5;3802:36;3829:8;3823:4;3802:36;:::i;:::-;3793:45;3713:131;-1:-1:-1;;;3713:131:6:o;3849:168::-;3889:7;3955:1;3951;3947:6;3943:14;3940:1;3937:21;3932:1;3925:9;3918:17;3914:45;3911:71;;;3962:18;;:::i;:::-;-1:-1:-1;4002:9:6;;3849:168::o;4382:128::-;4422:3;4453:1;4449:6;4446:1;4443:13;4440:39;;;4459:18;;:::i;:::-;-1:-1:-1;4495:9:6;;4382:128::o;4697:380::-;4776:1;4772:12;;;;4819;;;4840:61;;4894:4;4886:6;4882:17;4872:27;;4840:61;4947:2;4939:6;4936:14;4916:18;4913:38;4910:161;;;4993:10;4988:3;4984:20;4981:1;4974:31;5028:4;5025:1;5018:15;5056:4;5053:1;5046:15;4910:161;;4697:380;;;:::o;:::-;433:1819:0;;;;;;",
    "deployedSourceMap": "433:1819:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;475:21:0;;;;;-1:-1:-1;;;;;475:21:0;;;;;;-1:-1:-1;;;;;780:32:6;;;762:51;;750:2;735:18;475:21:0;616:203:6;4238:166:2;;;;;;:::i;:::-;;:::i;:::-;;;1426:14:6;;1419:22;1401:41;;1389:2;1374:18;4238:166:2;1261:187:6;3229:106:2;3316:12;;3229:106;;;1599:25:6;;;1587:2;1572:18;3229:106:2;1453:177:6;4871:478:2;;;;;;:::i;:::-;;:::i;3078:91::-;3160:2;3078:91;;;2140:4:6;2128:17;;;2110:36;;2098:2;2083:18;3078:91:2;1968:184:6;5744:212:2;;;;;;:::i;:::-;;:::i;1802:153:0:-;;;;;;:::i;:::-;;:::i;:::-;;1990:260;;;;;;:::i;:::-;;:::i;3393:125:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:2;3467:7;3493:18;;;;;;;;;;;;3393:125;1668:101:1;;;:::i;1036:85::-;1108:6;;-1:-1:-1;;;;;1108:6:1;1036:85;;2352:102:2;;;:::i;6443:405::-;;;;;;:::i;:::-;;:::i;3721:172::-;;;;;;:::i;:::-;;:::i;502:27:0:-;;;;;-1:-1:-1;;;502:27:0;;;;;;3951:149:2;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:2;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;1918:198:1;;;;;;:::i;:::-;;:::i;1636:127:0:-;;;;;;:::i;:::-;;:::i;2141:98:2:-;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;719:10:5;4360:7:2;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:2;4238:166;;;;:::o;4871:478::-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;-1:-1:-1;;;;;5097:19:2;;5070:24;5097:19;;;:11;:19;;;;;;;;719:10:5;5097:33:2;;;;;;;;5148:26;;;;5140:79;;;;-1:-1:-1;;;5140:79:2;;3200:2:6;5140:79:2;;;3182:21:6;3239:2;3219:18;;;3212:30;3278:34;3258:18;;;3251:62;-1:-1:-1;;;3329:18:6;;;3322:38;3377:19;;5140:79:2;;;;;;;;;5253:57;5262:6;719:10:5;5303:6:2;5284:16;:25;5253:8;:57::i;:::-;-1:-1:-1;5338:4:2;;4871:478;-1:-1:-1;;;;4871:478:2:o;5744:212::-;719:10:5;5832:4:2;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:2;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;1802:153:0:-;816:6;;-1:-1:-1;;;;;816:6:0;802:10;:20;794:57;;;;-1:-1:-1;;;794:57:0;;3874:2:6;794:57:0;;;3856:21:6;3913:2;3893:18;;;3886:30;-1:-1:-1;;;3932:18:6;;;3925:54;3996:18;;794:57:0;3672:348:6;794:57:0;1885:19:::1;1891:3;1896:7;1885:5;:19::i;:::-;1919:29;::::0;;-1:-1:-1;;;;;4217:32:6;;4199:51;;4281:2;4266:18;;4259:34;;;1919:29:0::1;::::0;4172:18:6;1919:29:0::1;;;;;;;;1802:153:::0;;:::o;1990:260::-;816:6;;-1:-1:-1;;;;;816:6:0;802:10;:20;794:57;;;;-1:-1:-1;;;794:57:0;;3874:2:6;794:57:0;;;3856:21:6;3913:2;3893:18;;;3886:30;-1:-1:-1;;;3932:18:6;;;3925:54;3996:18;;794:57:0;3672:348:6;794:57:0;2157:7:::1;2141:13;3316:12:2::0;;;3229:106;2141:13:0::1;:23;;;;:::i;:::-;2116:14;::::0;3316:12:2;;2134:3:0::1;::::0;-1:-1:-1;;;2116:14:0;::::1;;;::::0;2100:30:::1;;;;:::i;:::-;2099:38;;;;:::i;:::-;3316:12:2::0;;2083:54:0::1;;;;:::i;:::-;:81;;2075:90;;;::::0;::::1;;2176:21;2182:5;2189:7;2176:5;:21::i;:::-;2212:31;::::0;;-1:-1:-1;;;;;4217:32:6;;4199:51;;4281:2;4266:18;;4259:34;;;2212:31:0::1;::::0;4172:18:6;2212:31:0::1;4025:274:6::0;1668:101:1;1108:6;;-1:-1:-1;;;;;1108:6:1;719:10:5;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2352:102:2:-;2408:13;2440:7;2433:14;;;;;:::i;6443:405::-;719:10:5;6536:4:2;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:2;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:2;;5392:2:6;6623:85:2;;;5374:21:6;5431:2;5411:18;;;5404:30;5470:34;5450:18;;;5443:62;-1:-1:-1;;;5521:18:6;;;5514:35;5566:19;;6623:85:2;5190:401:6;6623:85:2;6742:67;719:10:5;6765:7:2;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:2;;6443:405;-1:-1:-1;;;6443:405:2:o;3721:172::-;3807:4;3823:42;719:10:5;3847:9:2;3858:6;3823:9;:42::i;1918:198:1:-;1108:6;;-1:-1:-1;;;;;1108:6:1;719:10:5;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:1;;5798:2:6;1998:73:1::1;::::0;::::1;5780:21:6::0;5837:2;5817:18;;;5810:30;5876:34;5856:18;;;5849:62;-1:-1:-1;;;5927:18:6;;;5920:36;5973:19;;1998:73:1::1;5596:402:6::0;1998:73:1::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;1636:127:0:-;1108:6:1;;-1:-1:-1;;;;;1108:6:1;719:10:5;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1703:6:0::1;:18:::0;;-1:-1:-1;;;;;;1703:18:0::1;-1:-1:-1::0;;;;;1703:18:0;::::1;::::0;;::::1;::::0;;;1736:20:::1;::::0;762:51:6;;;1736:20:0::1;::::0;750:2:6;735:18;1736:20:0::1;;;;;;;1636:127:::0;:::o;10019:370:2:-;-1:-1:-1;;;;;10150:19:2;;10142:68;;;;-1:-1:-1;;;10142:68:2;;6205:2:6;10142:68:2;;;6187:21:6;6244:2;6224:18;;;6217:30;6283:34;6263:18;;;6256:62;-1:-1:-1;;;6334:18:6;;;6327:34;6378:19;;10142:68:2;6003:400:6;10142:68:2;-1:-1:-1;;;;;10228:21:2;;10220:68;;;;-1:-1:-1;;;10220:68:2;;6610:2:6;10220:68:2;;;6592:21:6;6649:2;6629:18;;;6622:30;6688:34;6668:18;;;6661:62;-1:-1:-1;;;6739:18:6;;;6732:32;6781:19;;10220:68:2;6408:398:6;10220:68:2;-1:-1:-1;;;;;10299:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;1599:25:6;;;10350:32:2;;1572:18:6;10350:32:2;;;;;;;;10019:370;;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:2;;7449:70;;;;-1:-1:-1;;;7449:70:2;;7013:2:6;7449:70:2;;;6995:21:6;7052:2;7032:18;;;7025:30;7091:34;7071:18;;;7064:62;-1:-1:-1;;;7142:18:6;;;7135:35;7187:19;;7449:70:2;6811:401:6;7449:70:2;-1:-1:-1;;;;;7537:23:2;;7529:71;;;;-1:-1:-1;;;7529:71:2;;7419:2:6;7529:71:2;;;7401:21:6;7458:2;7438:18;;;7431:30;7497:34;7477:18;;;7470:62;-1:-1:-1;;;7548:18:6;;;7541:33;7591:19;;7529:71:2;7217:399:6;7529:71:2;-1:-1:-1;;;;;7693:17:2;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:2;;7823:2:6;7720:74:2;;;7805:21:6;7862:2;7842:18;;;7835:30;7901:34;7881:18;;;7874:62;-1:-1:-1;;;7952:18:6;;;7945:36;7998:19;;7720:74:2;7621:402:6;7720:74:2;-1:-1:-1;;;;;7828:17:2;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:2;7945:6;-1:-1:-1;;;;;7936:35:2;;7964:6;7936:35;;;;1599:25:6;;1587:2;1572:18;;1453:177;7936:35:2;;;;;;;;7439:596;7322:713;;;:::o;8311:389::-;-1:-1:-1;;;;;8394:21:2;;8386:65;;;;-1:-1:-1;;;8386:65:2;;8230:2:6;8386:65:2;;;8212:21:6;8269:2;8249:18;;;8242:30;8308:33;8288:18;;;8281:61;8359:18;;8386:65:2;8028:355:6;8386:65:2;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8554:18:2;;:9;:18;;;;;;;;;;:28;;8576:6;;8554:9;:28;;8576:6;;8554:28;:::i;:::-;;;;-1:-1:-1;;8597:37:2;;1599:25:6;;;-1:-1:-1;;;;;8597:37:2;;;8614:1;;8597:37;;1587:2:6;1572:18;8597:37:2;;;;;;;8311:389;;:::o;9020:576::-;-1:-1:-1;;;;;9103:21:2;;9095:67;;;;-1:-1:-1;;;9095:67:2;;8590:2:6;9095:67:2;;;8572:21:6;8629:2;8609:18;;;8602:30;8668:34;8648:18;;;8641:62;-1:-1:-1;;;8719:18:6;;;8712:31;8760:19;;9095:67:2;8388:397:6;9095:67:2;-1:-1:-1;;;;;9258:18:2;;9233:22;9258:18;;;;;;;;;;;9294:24;;;;9286:71;;;;-1:-1:-1;;;9286:71:2;;8992:2:6;9286:71:2;;;8974:21:6;9031:2;9011:18;;;9004:30;9070:34;9050:18;;;9043:62;-1:-1:-1;;;9121:18:6;;;9114:32;9163:19;;9286:71:2;8790:398:6;9286:71:2;-1:-1:-1;;;;;9391:18:2;;:9;:18;;;;;;;;;;9412:23;;;9391:44;;9455:12;:22;;9429:6;;9391:9;9455:22;;9429:6;;9455:22;:::i;:::-;;;;-1:-1:-1;;9493:37:2;;1599:25:6;;;9519:1:2;;-1:-1:-1;;;;;9493:37:2;;;;;1587:2:6;1572:18;9493:37:2;1453:177:6;2270:187:1;2362:6;;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;14:597:6:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:6;574:15;-1:-1:-1;;570:29:6;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:6:o;824:173::-;892:20;;-1:-1:-1;;;;;941:31:6;;931:42;;921:70;;987:1;984;977:12;921:70;824:173;;;:::o;1002:254::-;1070:6;1078;1131:2;1119:9;1110:7;1106:23;1102:32;1099:52;;;1147:1;1144;1137:12;1099:52;1170:29;1189:9;1170:29;:::i;:::-;1160:39;1246:2;1231:18;;;;1218:32;;-1:-1:-1;;;1002:254:6:o;1635:328::-;1712:6;1720;1728;1781:2;1769:9;1760:7;1756:23;1752:32;1749:52;;;1797:1;1794;1787:12;1749:52;1820:29;1839:9;1820:29;:::i;:::-;1810:39;;1868:38;1902:2;1891:9;1887:18;1868:38;:::i;:::-;1858:48;;1953:2;1942:9;1938:18;1925:32;1915:42;;1635:328;;;;;:::o;2157:186::-;2216:6;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;2157:186;-1:-1:-1;;;2157:186:6:o;2348:260::-;2416:6;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2516:29;2535:9;2516:29;:::i;:::-;2506:39;;2564:38;2598:2;2587:9;2583:18;2564:38;:::i;:::-;2554:48;;2348:260;;;;;:::o;2613:380::-;2692:1;2688:12;;;;2735;;;2756:61;;2810:4;2802:6;2798:17;2788:27;;2756:61;2863:2;2855:6;2852:14;2832:18;2829:38;2826:161;;;2909:10;2904:3;2900:20;2897:1;2890:31;2944:4;2941:1;2934:15;2972:4;2969:1;2962:15;2826:161;;2613:380;;;:::o;3407:127::-;3468:10;3463:3;3459:20;3456:1;3449:31;3499:4;3496:1;3489:15;3523:4;3520:1;3513:15;3539:128;3579:3;3610:1;3606:6;3603:1;3600:13;3597:39;;;3616:18;;:::i;:::-;-1:-1:-1;3652:9:6;;3539:128::o;4304:125::-;4344:4;4372:1;4369;4366:8;4363:34;;;4377:18;;:::i;:::-;-1:-1:-1;4414:9:6;;4304:125::o;4434:168::-;4474:7;4540:1;4536;4532:6;4528:14;4525:1;4522:21;4517:1;4510:9;4503:17;4499:45;4496:71;;;4547:18;;:::i;:::-;-1:-1:-1;4587:9:6;;4434:168::o;4607:217::-;4647:1;4673;4663:132;;4717:10;4712:3;4708:20;4705:1;4698:31;4752:4;4749:1;4742:15;4780:4;4777:1;4770:15;4663:132;-1:-1:-1;4809:9:6;;4607:217::o;4829:356::-;5031:2;5013:21;;;5050:18;;;5043:30;5109:34;5104:2;5089:18;;5082:62;5176:2;5161:18;;4829:356::o",
    "sourcePath": "/home/system32uwu/repos/solidity-game/contracts/PlanktonToken.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.11+commit.d7f03943"
    },
    "ast": {
        "absolutePath": "/home/system32uwu/repos/solidity-game/contracts/PlanktonToken.sol",
        "exportedSymbols": {
            "Context": [
                943
            ],
            "ERC20": [
                818
            ],
            "IERC20": [
                896
            ],
            "IERC20Metadata": [
                921
            ],
            "Ownable": [
                272
            ],
            "Plankton": [
                167
            ]
        },
        "id": 168,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "31:23:0"
            },
            {
                "absolutePath": "/home/system32uwu/repos/solidity-game/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "/home/system32uwu/repos/solidity-game/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 168,
                "sourceUnit": 819,
                "src": "56:106:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/system32uwu/repos/solidity-game/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "/home/system32uwu/repos/solidity-game/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 168,
                "sourceUnit": 273,
                "src": "163:103:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 818,
                            "src": "454:5:0"
                        },
                        "id": 6,
                        "nodeType": "InheritanceSpecifier",
                        "src": "454:5:0"
                    },
                    {
                        "baseName": {
                            "id": 7,
                            "name": "Ownable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 272,
                            "src": "461:7:0"
                        },
                        "id": 8,
                        "nodeType": "InheritanceSpecifier",
                        "src": "461:7:0"
                    }
                ],
                "canonicalName": "Plankton",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 4,
                    "nodeType": "StructuredDocumentation",
                    "src": "268:164:0",
                    "text": "@title Plankton Token, the currency for Fish Wars\n @author Mateo Carriqui\n @notice Mint and Burn Planktons, transfer minter authority to another address."
                },
                "fullyImplemented": true,
                "id": 167,
                "linearizedBaseContracts": [
                    167,
                    272,
                    818,
                    921,
                    896,
                    943
                ],
                "name": "Plankton",
                "nameLocation": "442:8:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "07546172",
                        "id": 10,
                        "mutability": "mutable",
                        "name": "minter",
                        "nameLocation": "490:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 167,
                        "src": "475:21:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 9,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "475:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "c3d74026",
                        "id": 12,
                        "mutability": "mutable",
                        "name": "maxBurnPercent",
                        "nameLocation": "515:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 167,
                        "src": "502:27:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                        },
                        "typeName": {
                            "id": 11,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "502:5:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "anonymous": false,
                        "id": 18,
                        "name": "PlanktonsMinted",
                        "nameLocation": "542:15:0",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 17,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 14,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "_to",
                                    "nameLocation": "566:3:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 18,
                                    "src": "558:11:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 13,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "558:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 16,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "_amount",
                                    "nameLocation": "579:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 18,
                                    "src": "571:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 15,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "571:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "557:30:0"
                        },
                        "src": "536:52:0"
                    },
                    {
                        "anonymous": false,
                        "id": 24,
                        "name": "PlanktonsBurned",
                        "nameLocation": "599:15:0",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 23,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 20,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "_from",
                                    "nameLocation": "623:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 24,
                                    "src": "615:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 19,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "615:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 22,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "_amount",
                                    "nameLocation": "638:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 24,
                                    "src": "630:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 21,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "630:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "614:32:0"
                        },
                        "src": "593:54:0"
                    },
                    {
                        "anonymous": false,
                        "id": 28,
                        "name": "LogNewMinter",
                        "nameLocation": "658:12:0",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 27,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 26,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "_minter",
                                    "nameLocation": "679:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 28,
                                    "src": "671:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 25,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "671:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "670:17:0"
                        },
                        "src": "652:36:0"
                    },
                    {
                        "body": {
                            "id": 40,
                            "nodeType": "Block",
                            "src": "784:85:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 35,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 32,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "802:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 33,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "802:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 34,
                                                    "name": "minter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 10,
                                                    "src": "816:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "802:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "43616c6c6572206973206e6f7420746865206d696e746572",
                                                "id": 36,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "824:26:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_68c61d730988418560331ceb0198019ebcb188a96a5a4ee0a334f0b46cc3bbca",
                                                    "typeString": "literal_string \"Caller is not the minter\""
                                                },
                                                "value": "Caller is not the minter"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_68c61d730988418560331ceb0198019ebcb188a96a5a4ee0a334f0b46cc3bbca",
                                                    "typeString": "literal_string \"Caller is not the minter\""
                                                }
                                            ],
                                            "id": 31,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "794:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 37,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "794:57:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 38,
                                    "nodeType": "ExpressionStatement",
                                    "src": "794:57:0"
                                },
                                {
                                    "id": 39,
                                    "nodeType": "PlaceholderStatement",
                                    "src": "861:1:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 29,
                            "nodeType": "StructuredDocumentation",
                            "src": "694:63:0",
                            "text": "@dev Throws if called by any account other than the minter."
                        },
                        "id": 41,
                        "name": "onlyMinter",
                        "nameLocation": "771:10:0",
                        "nodeType": "ModifierDefinition",
                        "parameters": {
                            "id": 30,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "781:2:0"
                        },
                        "src": "762:107:0",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 88,
                            "nodeType": "Block",
                            "src": "1344:215:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                },
                                                "id": 62,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 60,
                                                    "name": "_maxBurnPercent",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 52,
                                                    "src": "1362:15:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "hexValue": "313030",
                                                    "id": 61,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1380:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                    },
                                                    "value": "100"
                                                },
                                                "src": "1362:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "496e76616c6964205f6d61784275726e50657263656e74",
                                                "id": 63,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1385:25:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_3e74b712780cd59cbc47b906b65166c31c94ce3c7ef6940ad85d4efaf3f568ed",
                                                    "typeString": "literal_string \"Invalid _maxBurnPercent\""
                                                },
                                                "value": "Invalid _maxBurnPercent"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_3e74b712780cd59cbc47b906b65166c31c94ce3c7ef6940ad85d4efaf3f568ed",
                                                    "typeString": "literal_string \"Invalid _maxBurnPercent\""
                                                }
                                            ],
                                            "id": 59,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1354:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 64,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1354:57:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 65,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1354:57:0"
                                },
                                {
                                    "expression": {
                                        "id": 69,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 66,
                                            "name": "minter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10,
                                            "src": "1421:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 67,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "1430:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 68,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "1430:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1421:19:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 70,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1421:19:0"
                                },
                                {
                                    "expression": {
                                        "id": 73,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 71,
                                            "name": "maxBurnPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12,
                                            "src": "1450:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 72,
                                            "name": "_maxBurnPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 52,
                                            "src": "1467:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "src": "1450:32:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1450:32:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 76,
                                                "name": "_beneficiary",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 50,
                                                "src": "1498:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 85,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 77,
                                                    "name": "initialSupply",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 48,
                                                    "src": "1512:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 84,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "hexValue": "3130",
                                                        "id": 78,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1528:2:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "**",
                                                    "rightExpression": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "id": 81,
                                                                    "name": "decimals",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 347,
                                                                    "src": "1540:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                        "typeString": "function () view returns (uint8)"
                                                                    }
                                                                },
                                                                "id": 82,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "1540:10:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                }
                                                            ],
                                                            "id": 80,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "1532:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                                "typeString": "type(uint256)"
                                                            },
                                                            "typeName": {
                                                                "id": 79,
                                                                "name": "uint256",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "1532:7:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 83,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1532:19:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "1528:23:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1512:39:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 75,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 678,
                                            "src": "1492:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 86,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1492:60:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 87,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1492:60:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 42,
                            "nodeType": "StructuredDocumentation",
                            "src": "875:276:0",
                            "text": " @param name The name of the Token (Plankton).\n @param symbol The symbol of the Token (PLANK).\n @param initialSupply initial supply when deploying the token on a network.\n @param _beneficiary The address that will receive the minted tokens."
                        },
                        "id": 89,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 55,
                                        "name": "name",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 44,
                                        "src": "1330:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 56,
                                        "name": "symbol",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46,
                                        "src": "1336:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    }
                                ],
                                "id": 57,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 54,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 818,
                                    "src": "1324:5:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1324:19:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 53,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 44,
                                    "mutability": "mutable",
                                    "name": "name",
                                    "nameLocation": "1191:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 89,
                                    "src": "1177:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 43,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1177:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 46,
                                    "mutability": "mutable",
                                    "name": "symbol",
                                    "nameLocation": "1219:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 89,
                                    "src": "1205:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 45,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1205:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 48,
                                    "mutability": "mutable",
                                    "name": "initialSupply",
                                    "nameLocation": "1243:13:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 89,
                                    "src": "1235:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 47,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1235:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 50,
                                    "mutability": "mutable",
                                    "name": "_beneficiary",
                                    "nameLocation": "1274:12:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 89,
                                    "src": "1266:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 49,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1266:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 52,
                                    "mutability": "mutable",
                                    "name": "_maxBurnPercent",
                                    "nameLocation": "1302:15:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 89,
                                    "src": "1296:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                    },
                                    "typeName": {
                                        "id": 51,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1296:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1167:156:0"
                        },
                        "returnParameters": {
                            "id": 58,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1344:0:0"
                        },
                        "scope": 167,
                        "src": "1156:403:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 105,
                            "nodeType": "Block",
                            "src": "1693:70:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 99,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 97,
                                            "name": "minter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10,
                                            "src": "1703:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 98,
                                            "name": "newMinter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 92,
                                            "src": "1712:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1703:18:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 100,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1703:18:0"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "id": 102,
                                                "name": "minter",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 10,
                                                "src": "1749:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 101,
                                            "name": "LogNewMinter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 28,
                                            "src": "1736:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 103,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1736:20:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 104,
                                    "nodeType": "EmitStatement",
                                    "src": "1731:25:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 90,
                            "nodeType": "StructuredDocumentation",
                            "src": "1565:66:0",
                            "text": " @param newMinter The address of the new minter."
                        },
                        "functionSelector": "fca3b5aa",
                        "id": 106,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 95,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 94,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 214,
                                    "src": "1683:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1683:9:0"
                            }
                        ],
                        "name": "setMinter",
                        "nameLocation": "1645:9:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 93,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 92,
                                    "mutability": "mutable",
                                    "name": "newMinter",
                                    "nameLocation": "1663:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 106,
                                    "src": "1655:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 91,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1655:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1654:19:0"
                        },
                        "returnParameters": {
                            "id": 96,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1693:0:0"
                        },
                        "scope": 167,
                        "src": "1636:127:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 126,
                            "nodeType": "Block",
                            "src": "1875:80:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 117,
                                                "name": "_to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 109,
                                                "src": "1891:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 118,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 111,
                                                "src": "1896:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 116,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 678,
                                            "src": "1885:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 119,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1885:19:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 120,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1885:19:0"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "id": 122,
                                                "name": "_to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 109,
                                                "src": "1935:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 123,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 111,
                                                "src": "1940:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 121,
                                            "name": "PlanktonsMinted",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 18,
                                            "src": "1919:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 124,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1919:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 125,
                                    "nodeType": "EmitStatement",
                                    "src": "1914:34:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 107,
                            "nodeType": "StructuredDocumentation",
                            "src": "1769:28:0",
                            "text": "@dev Mint new Planktons."
                        },
                        "functionSelector": "5e1e50f3",
                        "id": 127,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 114,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 113,
                                    "name": "onlyMinter",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 41,
                                    "src": "1864:10:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1864:10:0"
                            }
                        ],
                        "name": "mintPlanktons",
                        "nameLocation": "1811:13:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 112,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 109,
                                    "mutability": "mutable",
                                    "name": "_to",
                                    "nameLocation": "1833:3:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 127,
                                    "src": "1825:11:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 108,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1825:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 111,
                                    "mutability": "mutable",
                                    "name": "_amount",
                                    "nameLocation": "1846:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 127,
                                    "src": "1838:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 110,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1838:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1824:30:0"
                        },
                        "returnParameters": {
                            "id": 115,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1875:0:0"
                        },
                        "scope": 167,
                        "src": "1802:153:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 165,
                            "nodeType": "Block",
                            "src": "2065:185:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 152,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 147,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 138,
                                                            "name": "totalSupply",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 357,
                                                            "src": "2083:11:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                "typeString": "function () view returns (uint256)"
                                                            }
                                                        },
                                                        "id": 139,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2083:13:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 146,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "components": [
                                                                {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    },
                                                                    "id": 143,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 140,
                                                                            "name": "totalSupply",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 357,
                                                                            "src": "2100:11:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                                "typeString": "function () view returns (uint256)"
                                                                            }
                                                                        },
                                                                        "id": 141,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "2100:13:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "rightExpression": {
                                                                        "id": 142,
                                                                        "name": "maxBurnPercent",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 12,
                                                                        "src": "2116:14:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                        }
                                                                    },
                                                                    "src": "2100:30:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "id": 144,
                                                            "isConstant": false,
                                                            "isInlineArray": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "TupleExpression",
                                                            "src": "2099:32:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "/",
                                                        "rightExpression": {
                                                            "hexValue": "313030",
                                                            "id": 145,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2134:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_100_by_1",
                                                                "typeString": "int_const 100"
                                                            },
                                                            "value": "100"
                                                        },
                                                        "src": "2099:38:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "2083:54:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 151,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 148,
                                                            "name": "totalSupply",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 357,
                                                            "src": "2141:11:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                "typeString": "function () view returns (uint256)"
                                                            }
                                                        },
                                                        "id": 149,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2141:13:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                        "id": 150,
                                                        "name": "_amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 132,
                                                        "src": "2157:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "2141:23:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2083:81:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 137,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2075:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 153,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2075:90:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 154,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2075:90:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 156,
                                                "name": "_from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 130,
                                                "src": "2182:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 157,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 132,
                                                "src": "2189:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 155,
                                            "name": "_burn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 750,
                                            "src": "2176:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 158,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2176:21:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 159,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2176:21:0"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "id": 161,
                                                "name": "_from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 130,
                                                "src": "2228:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 162,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 132,
                                                "src": "2235:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 160,
                                            "name": "PlanktonsBurned",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24,
                                            "src": "2212:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 163,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2212:31:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 164,
                                    "nodeType": "EmitStatement",
                                    "src": "2207:36:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 128,
                            "nodeType": "StructuredDocumentation",
                            "src": "1961:24:0",
                            "text": "@dev Burn Planktons."
                        },
                        "functionSelector": "630fcfaf",
                        "id": 166,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 135,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 134,
                                    "name": "onlyMinter",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 41,
                                    "src": "2054:10:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2054:10:0"
                            }
                        ],
                        "name": "burnPlanktons",
                        "nameLocation": "1999:13:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 133,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 130,
                                    "mutability": "mutable",
                                    "name": "_from",
                                    "nameLocation": "2021:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 166,
                                    "src": "2013:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 129,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2013:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 132,
                                    "mutability": "mutable",
                                    "name": "_amount",
                                    "nameLocation": "2036:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 166,
                                    "src": "2028:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 131,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2028:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2012:32:0"
                        },
                        "returnParameters": {
                            "id": 136,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2065:0:0"
                        },
                        "scope": 167,
                        "src": "1990:260:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 168,
                "src": "433:1819:0",
                "usedErrors": []
            }
        ],
        "src": "31:2222:0"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burnPlanktons(address,uint256)": "630fcfaf",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "maxBurnPercent()": "c3d74026",
        "mintPlanktons(address,uint256)": "5e1e50f3",
        "minter()": "07546172",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "renounceOwnership()": "715018a6",
        "setMinter(address)": "fca3b5aa",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "812000",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24665",
            "balanceOf(address)": "2563",
            "burnPlanktons(address,uint256)": "infinite",
            "decimals()": "235",
            "decreaseAllowance(address,uint256)": "27000",
            "increaseAllowance(address,uint256)": "27002",
            "maxBurnPercent()": "2374",
            "mintPlanktons(address,uint256)": "infinite",
            "minter()": "2383",
            "name()": "infinite",
            "owner()": "2398",
            "renounceOwnership()": "28162",
            "setMinter(address)": "27874",
            "symbol()": "infinite",
            "totalSupply()": "2371",
            "transfer(address,uint256)": "51187",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "28400"
        }
    }
}